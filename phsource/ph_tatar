

// use 'flag1' for front vowels

phoneme i
  vowel flag1 starttype #i endtype #i
  length 180
  FMT(vowel/i)
endphoneme

phoneme y
  vowel flag1 starttype #u endtype #u
  length 180
  FMT(vowel/y)
endphoneme

phoneme u
  vowel starttype #u endtype #u
  length 180
  FMT(vowel/u)
endphoneme

phoneme u2   // letter 'ю'
  vowel starttype #u endtype #u
  length 180
  IF prevVowel(isFlag1) OR nextVowel(isFlag1) THEN
    ChangePhoneme(y)
  ELSE
    ChangePhoneme(u)
  ENDIF
endphoneme

phoneme e
  vowel flag1 starttype #@ endtype #@
  length 100
  FMT(vowel/ii#)
endphoneme

phoneme e2    // 'e' at start of word
  vowel starttype #@ endtype #@
  length 100
  IF nextVowel(isFlag1) THEN
    ChangePhoneme(e)
  ENDIF
  ChangePhoneme(V)
endphoneme

phoneme W
  vowel flag1 starttype #@ endtype #@
  length 100
  FMT(vowel/oe)
endphoneme

phoneme o
  vowel starttype #o endtype #o
  length 100
  FMT(vowel/o_mid)
endphoneme

phoneme V
  vowel starttype #@ endtype #@
  length 100
  FMT(vowel/o-_3)
endphoneme


phoneme a
  vowel flag1 starttype #a endtype #a
  length 180
  FMT(vowel/&_2)
endphoneme

phoneme A
  vowel starttype #a endtype #a
  length 180
  IF thisPh(isFirstVowel) THEN
    ChangePhoneme(0)
  ENDIF
  IF prevVowel(0) THEN
    ChangePhoneme(0)
  ENDIF
  FMT(vowel/aa)
endphoneme

phoneme A2  // letter 'я'
  vowel starttype #a endtype #a
  length 180
  IF prevVowel(isFlag1) OR nextVowel(isFlag1) THEN
    ChangePhoneme(a)
  ENDIF
  ChangePhoneme(A)
endphoneme

phoneme 0
  vowel starttype #o endtype #o
  length 180
  FMT(vowel/0_3)
endphoneme


phoneme I
  vowel flag1 starttype #i endtype #i
  length 100
  FMT(vowel/ii)
endphoneme



// Consonants

phoneme r
  import_phoneme base/R2
endphoneme

phoneme t
  import_phoneme base/t[
endphoneme

phoneme d
  import_phoneme base/d[
endphoneme

